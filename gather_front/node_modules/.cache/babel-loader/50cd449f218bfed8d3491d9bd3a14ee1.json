{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\W10AS31122021\\\\Desktop\\\\GATHER\\\\gather_front\\\\src\\\\components\\\\atoms\\\\Button\\\\button.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import styles from './button.module.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  _s();\n\n  let {\n    children,\n    onClick,\n    btnColor = 'teal',\n    labelColor,\n    disabled,\n    type,\n    style,\n    ...props\n  } = _ref;\n  const [hover, setHover] = useState(false);\n\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n\n  const commonStyles = {\n    backgroundColor: btnColor,\n    color: labelColor || 'white'\n  };\n  const outlineStyles = {\n    border: `1px solid ${btnColor}`,\n    color: btnColor,\n    backgroundColor: 'white'\n  };\n  const outlineHoverStyle = {\n    color: labelColor || 'white',\n    backgroundColor: btnColor\n  };\n  const roundedStyle = {\n    backgroundColor: btnColor,\n    color: labelColor || 'white',\n    borderRadius: '25px'\n  };\n  const disabledStyle = {\n    cursor: 'default',\n    backgroundColor: btnColor,\n    color: labelColor || 'white',\n    opacity: 0.4\n  };\n  const blockStyles = {\n    width: '95%',\n    margin: '0 auto'\n  };\n  let btnStyle;\n\n  switch (type) {\n    case 'rounded':\n      btnStyle = roundedStyle;\n      break;\n\n    case 'block':\n      btnStyle = blockStyles;\n      break;\n\n    case 'outline':\n      if (hover) {\n        btnStyle = outlineHoverStyle;\n      } else {\n        btnStyle = outlineStyles;\n      }\n\n      break;\n\n    default:\n      btnStyle = {\n        backgroundColor: btnColor,\n        color: labelColor || 'white'\n      };\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: disabled ? { ...commonStyles,\n      ...btnStyle,\n      ...disabledStyle,\n      ...style\n    } : { ...commonStyles,\n      ...btnStyle,\n      ...style\n    },\n    onMouseEnter: toggleHover,\n    onMouseLeave: toggleHover,\n    ...props,\n    type: \"button\",\n    onClick: !disabled ? onClick : () => {},\n    className: styles.btn,\n    children: children || 'button'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Button, \"vU+MLZzLpySiX5pajQIP8fQeQCE=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/W10AS31122021/Desktop/GATHER/gather_front/src/components/atoms/Button/button.jsx"],"names":["React","useState","Button","children","onClick","btnColor","labelColor","disabled","type","style","props","hover","setHover","toggleHover","commonStyles","backgroundColor","color","outlineStyles","border","outlineHoverStyle","roundedStyle","borderRadius","disabledStyle","cursor","opacity","blockStyles","width","margin","btnStyle","styles","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;;AAEA,MAAMC,MAAM,GAAG,QAA2F;AAAA;;AAAA,MAA1F;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,QAAQ,GAAG,MAAhC;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA,QAApD;AAA8DC,IAAAA,IAA9D;AAAoEC,IAAAA,KAApE;AAA2E,OAAGC;AAA9E,GAA0F;AACtG,QAAM,CACFC,KADE,EAEFC,QAFE,IAGFX,QAAQ,CAAC,KAAD,CAHZ;;AAIA,QAAMY,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAFD;;AAGA,QAAMG,YAAY,GAAG;AACjBC,IAAAA,eAAe,EAAGV,QADD;AAEjBW,IAAAA,KAAK,EAAaV,UAAU,IAAI;AAFf,GAArB;AAIA,QAAMW,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAa,aAAYb,QAAS,EADtB;AAElBW,IAAAA,KAAK,EAAaX,QAFA;AAGlBU,IAAAA,eAAe,EAAG;AAHA,GAAtB;AAKA,QAAMI,iBAAiB,GAAG;AACtBH,IAAAA,KAAK,EAAaV,UAAU,IAAI,OADV;AAEtBS,IAAAA,eAAe,EAAGV;AAFI,GAA1B;AAKA,QAAMe,YAAY,GAAG;AACjBL,IAAAA,eAAe,EAAGV,QADD;AAEjBW,IAAAA,KAAK,EAAaV,UAAU,IAAI,OAFf;AAGjBe,IAAAA,YAAY,EAAM;AAHD,GAArB;AAKA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAY,SADA;AAElBR,IAAAA,eAAe,EAAGV,QAFA;AAGlBW,IAAAA,KAAK,EAAaV,UAAU,IAAI,OAHd;AAIlBkB,IAAAA,OAAO,EAAW;AAJA,GAAtB;AAMA,QAAMC,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAI,KADO;AAEhBC,IAAAA,MAAM,EAAG;AAFO,GAApB;AAIA,MAAIC,QAAJ;;AACA,UAAQpB,IAAR;AACI,SAAK,SAAL;AACIoB,MAAAA,QAAQ,GAAGR,YAAX;AACA;;AACJ,SAAK,OAAL;AACIQ,MAAAA,QAAQ,GAAGH,WAAX;AACA;;AACJ,SAAK,SAAL;AACI,UAAId,KAAJ,EAAW;AACPiB,QAAAA,QAAQ,GAAGT,iBAAX;AACH,OAFD,MAGK;AACDS,QAAAA,QAAQ,GAAGX,aAAX;AACH;;AACD;;AACJ;AACIW,MAAAA,QAAQ,GAAG;AACPb,QAAAA,eAAe,EAAGV,QADX;AAEPW,QAAAA,KAAK,EAAaV,UAAU,IAAI;AAFzB,OAAX;AAIA;AApBR;;AAsBA,sBACI;AACI,IAAA,KAAK,EAEGC,QAAQ,GAAG,EAAE,GAAGO,YAAL;AAAmB,SAAGc,QAAtB;AAAgC,SAAGN,aAAnC;AAAkD,SAAGb;AAArD,KAAH,GACR,EAAE,GAAGK,YAAL;AAAmB,SAAGc,QAAtB;AAAgC,SAAGnB;AAAnC,KAJZ;AAMI,IAAA,YAAY,EAAEI,WANlB;AAOI,IAAA,YAAY,EAAEA,WAPlB;AAAA,OAQQH,KARR;AASI,IAAA,IAAI,EAAC,QATT;AAUI,IAAA,OAAO,EAEC,CAACH,QAAD,GAAYH,OAAZ,GACA,MAAM,CAAE,CAbpB;AAeI,IAAA,SAAS,EAAEyB,MAAM,CAACC,GAftB;AAAA,cAiBK3B,QAAQ,IAAI;AAjBjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAjFD;;GAAMD,M;;KAAAA,M;AAmFN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n// import styles from './button.module.css';\r\n\r\nconst Button = ({ children, onClick, btnColor = 'teal', labelColor, disabled, type, style, ...props }) => {\r\n    const [\r\n        hover,\r\n        setHover\r\n    ] = useState(false);\r\n    const toggleHover = () => {\r\n        setHover(!hover);\r\n    };\r\n    const commonStyles = {\r\n        backgroundColor : btnColor,\r\n        color           : labelColor || 'white'\r\n    };\r\n    const outlineStyles = {\r\n        border          : `1px solid ${btnColor}`,\r\n        color           : btnColor,\r\n        backgroundColor : 'white'\r\n    };\r\n    const outlineHoverStyle = {\r\n        color           : labelColor || 'white',\r\n        backgroundColor : btnColor\r\n    };\r\n\r\n    const roundedStyle = {\r\n        backgroundColor : btnColor,\r\n        color           : labelColor || 'white',\r\n        borderRadius    : '25px'\r\n    };\r\n    const disabledStyle = {\r\n        cursor          : 'default',\r\n        backgroundColor : btnColor,\r\n        color           : labelColor || 'white',\r\n        opacity         : 0.4\r\n    };\r\n    const blockStyles = {\r\n        width  : '95%',\r\n        margin : '0 auto'\r\n    };\r\n    let btnStyle;\r\n    switch (type) {\r\n        case 'rounded':\r\n            btnStyle = roundedStyle;\r\n            break;\r\n        case 'block':\r\n            btnStyle = blockStyles;\r\n            break;\r\n        case 'outline':\r\n            if (hover) {\r\n                btnStyle = outlineHoverStyle;\r\n            }\r\n            else {\r\n                btnStyle = outlineStyles;\r\n            }\r\n            break;\r\n        default:\r\n            btnStyle = {\r\n                backgroundColor : btnColor,\r\n                color           : labelColor || 'white'\r\n            };\r\n            break;\r\n    }\r\n    return (\r\n        <button\r\n            style={\r\n\r\n                    disabled ? { ...commonStyles, ...btnStyle, ...disabledStyle, ...style } :\r\n                    { ...commonStyles, ...btnStyle, ...style }\r\n            }\r\n            onMouseEnter={toggleHover}\r\n            onMouseLeave={toggleHover}\r\n            {...props}\r\n            type=\"button\"\r\n            onClick={\r\n\r\n                    !disabled ? onClick :\r\n                    () => {}\r\n            }\r\n            className={styles.btn}\r\n        >\r\n            {children || 'button'}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}